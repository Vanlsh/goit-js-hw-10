{"version":3,"file":"commonHelpers.js","sources":["../src/js/alertOptions.js","../src/js/01-timer.js","../src/js/02-snackbar.js"],"sourcesContent":["export const alertOptions = {\n  error: {\n    title: 'Error',\n    message: 'Please choose a date in the future',\n    color: '#EF4040',\n    position: 'topRight',\n    icon: 'icon-octagon',\n    iconText: '',\n    timeout: 5000,\n    titleColor: '#fff',\n    messageColor: '#fff',\n    iconColor: '#fff',\n  },\n  success: {\n    title: 'OK',\n    message: 'Fulfilled promise in 4000ms',\n    color: '#59A10D',\n    position: 'topRight',\n    icon: 'icon-check-circle',\n    iconText: '',\n    timeout: 5000,\n    titleColor: '#fff',\n    messageColor: '#fff',\n    iconColor: '#fff',\n  },\n};\n","import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { alertOptions } from './alertOptions.js';\n\nconst dateTimeSelector = document.querySelector('input#datetime-picker');\nconst startTimerButton = document.querySelector('button[data-start]');\nconst daysInput = document.querySelector('span[data-days]');\nconst hoursInput = document.querySelector('span[data-hours]');\nconst minutesInput = document.querySelector('span[data-minutes]');\nconst secondsInput = document.querySelector('span[data-seconds]');\n\nlet userSelectedDate, timerId;\n\nconst countLeftTime = date => {\n  const dateNow = Math.floor(Date.now() / 1000);\n  const selectedDate = date.getTime() / 1000;\n  return (selectedDate - dateNow) * 1000;\n};\n\nconst convertMs = ms => {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n};\n\nconst setDate = ({ days, hours, minutes, seconds }) => {\n  daysInput.textContent = String(days).padStart(2, 0);\n  hoursInput.textContent = String(hours).padStart(2, 0);\n  minutesInput.textContent = String(minutes).padStart(2, 0);\n  secondsInput.textContent = String(seconds).padStart(2, 0);\n};\n\nconst startTimer = time => {\n  return () => {\n    time -= 1000;\n    if (time >= 0) {\n      setDate(convertMs(time));\n    } else {\n      dateTimeSelector.disabled = false;\n      clearInterval(timerId);\n    }\n  };\n};\n\nstartTimerButton.addEventListener('click', () => {\n  const time = countLeftTime(userSelectedDate);\n  startTimerButton.disabled = true;\n\n  if (time > 0) {\n    dateTimeSelector.disabled = true;\n    setDate(convertMs(time));\n    timerId = setInterval(startTimer(time), 1000);\n  } else {\n    iziToast.show(alertOptions.error);\n  }\n});\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (countLeftTime(selectedDates[0]) > 0) {\n      userSelectedDate = selectedDates[0];\n      startTimerButton.disabled = false;\n    } else {\n      startTimerButton.disabled = true;\n      iziToast.show(alertOptions.error);\n    }\n  },\n};\n\nflatpickr(dateTimeSelector, options);\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { alertOptions } from './alertOptions.js';\n\nconst form = document.querySelector('.form');\nconst radioButtons = document.querySelectorAll('input[name=\"state\"]');\nconst formFieldset = document.querySelector('fieldset');\n\nconst PRESSED = 'pressed';\nconst CHECKED = 'checked';\nconst FULFILLED = 'fulfilled';\n\nfunction handleRadioChange(event) {\n  const checkedLabel = document.querySelector('.checked');\n  const isPressed = formFieldset.classList.value.includes(PRESSED);\n  if (!isPressed) {\n    formFieldset.classList.add(PRESSED);\n  }\n  if (checkedLabel) {\n    checkedLabel.classList.remove(CHECKED);\n  }\n  const checkedRadio = document.querySelector('input[name=\"state\"]:checked');\n  if (checkedRadio) {\n    const checkedLabel = checkedRadio.closest('label');\n    if (checkedLabel) {\n      checkedLabel.classList.add(CHECKED);\n    }\n  }\n}\n\nconst onSubmit = event => {\n  event.preventDefault();\n  const delay = Number(event.target.elements.delay.value);\n  const isFulfilled = event.target.elements.state.value === FULFILLED;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (isFulfilled) {\n        resolve(`Fulfilled promise in ${delay}ms`);\n      } else {\n        reject(`Rejected promise in ${delay}ms`);\n      }\n    }, delay);\n  });\n\n  promise\n    .then(value => {\n      iziToast.show({ ...alertOptions.success, message: value });\n    })\n    .catch(error => {\n      iziToast.show({ ...alertOptions.error, message: error });\n    });\n};\n\nform.addEventListener('submit', onSubmit);\n\nradioButtons.forEach(radioButton => {\n  radioButton.addEventListener('change', handleRadioChange);\n});\n"],"names":["alertOptions","dateTimeSelector","startTimerButton","daysInput","hoursInput","minutesInput","secondsInput","userSelectedDate","timerId","countLeftTime","date","dateNow","convertMs","ms","days","hours","minutes","seconds","setDate","startTimer","time","iziToast","options","selectedDates","flatpickr","form","radioButtons","formFieldset","PRESSED","CHECKED","FULFILLED","handleRadioChange","event","checkedLabel","checkedRadio","onSubmit","delay","isFulfilled","resolve","reject","value","error","radioButton"],"mappings":"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"}